io.error=Error reading input files. Please make sure all the files are valid.
invlaid.number={0} is an invalid number.
number.none.match={0} did not have any match
number.matches={0} matches {1}
invalid.file.path=File {0} does not exist. Please give a valid file path.
no.input.message=No input provided, terminating the application.
application.usage.message=Usage: java [-options] -jar number-converter-1.0-SNAPSHOT.jar [args...]\n\
\n\
where args is the list of file paths, separated by whitespace, of files containing phone numbers to be converted to matching words combinations.\n\
	\tIf not provided the application will ask interactively to provide the same.\n\
\n\
and options include\n\
	\t-Ddictionary.path=<dictionaryPath>\n\
		\t\tFile path of a dictionary containing words which would be used to convert a number to matching words combination.\n\
		\t\tIf not provided defaults to an internal dictionary containing around 3000 common words.\n\
	\t-Dunchangedigits.list=<unchangedDigitsList>\n\
		\t\tComma separated list of no. of digits which can remain as-is if no matching word is found for them. Defaults to 1.\n\
		\t\tEx-> if you want 2 consecutive digits unchanged, but no single digit remaining unchanged in isolation, then the option should be -Dunchangedigits.list=2\n\
		\t\tBut if you want maximum of 2 consecutive digits unchanged, then the option should be  -Dunchangedigits.list=1,2\n\
	\t-Dconcatenate.delimiter=<delimiterchar>\n\
		\t\tDelimiter character used to concatenate different words. Default to -\n

missing.commanline.args.message=Enter USE or U for Usage, SAMPLE or S to run the application with sample data.\n\
Else give list of file paths, separated by whitespace, of files  containing phone numbers.		